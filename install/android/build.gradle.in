buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "'com.android.tools.build:gradle:$$GRADE_VERSION'"
    }
}

repositories {
    google()
    jcenter()
}

apply plugin: "'com.android.application'"

dependencies {
    implementation fileTree(dir: "'libs'", include: ["'*.jar'", "'*.aar'"])
    implementation "'androidx.legacy:legacy-support-v4:1.0.0'"
}

android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    /*
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    */

    compileSdkVersion androidCompileSdkVersion.toInteger()

    buildToolsVersion androidBuildToolsVersion
    
    defaultConfig {
        applicationId '"$$ANDROID_PACKAGENAME"'
        minSdkVersion "$$ANDROID_MINSDK"
        targetSdkVersion "$$ANDROID_TARGETSDK"
    }

    sourceSets {
        main { 
            manifest.srcFile "'AndroidManifest.xml'"
            java.srcDirs = [qt5AndroidDir + "'/src'", "'src'", "'java'"]
            aidl.srcDirs = [qt5AndroidDir + "'/src'", "'src'", "'aidl'"]
            res.srcDirs = [qt5AndroidDir + "'/res'", "'res'"]
            resources.srcDirs = ["'src'"]
            renderscript.srcDirs = ["'src'"]
            assets.srcDirs = ["'assets'"]
            jniLibs.srcDirs = ["'libs'"]
       }
    }

    lintOptions {
        abortOnError false
    }
}
